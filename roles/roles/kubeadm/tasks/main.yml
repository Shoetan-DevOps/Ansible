# tasks file for kubeadm

#<---------------- Add K8s Repo   ----------------------------->
# Add kubernetes repo 
- name: Add k8s repo
  ansible.builtin.copy:
    src: /etc/ansible/roles/kubeadm/files/kubernetes.repo
    dest: /etc/yum.repos.d/kubernetes.repo
  notify: Set SE linux to permissive & disable swap

- name: completed_install
  meta: flush_handlers

# <---------------- Install CRI-O Runtime  --------------------------->
# set k8s version 
- name: set k8s version
  ansible.builtin.command: VERSION="$(echo ${KUBERNETES_VERSION} | grep -oE '[0-9]+\.[0-9]+')"

- name: completed_install
  meta: flush_handlers


# containerD pre-req - allow iptables to see bridged traffic
- name: (containerD pre-req) allow bridged traffic
  ansible.builtin.copy:
    src: /etc/ansible/roles/kubeadm/files/k8s-ip.conf
    dest: /etc/sysctl.d/k8s.conf
  notify:
    - (containerD re-req) Apply bridge without reboot

- name: completed_install
  meta: flush_handlers

# Install yum utils for managing yum repo
- name: Install yum-utils  
  ansible.builtin.package:
    name: yum-utils
    state: present
  notify:
    - Add docker repo

- name: completed_install
  meta: flush_handlers


# Install container d
- name: Install containerd
  ansible.builtin.package:
    name: containerd.io
    state: present
  notify:
    - Delete config.toml & enable CRI
    - replace containerd config.toml
    - Restart containerd service
    - Install kubeadm, kubelet and kubectl
    - Enable kubelet service
    - Start kubelet service

- name: completed_install
  meta: flush_handlers


# Add kubernetes repo to yum for RHEL / non debian
#- name: Add K8s to yum repo
#  ansible.builtin.copy:
#    src: kubernetes.repo
#    dest: /etc/yum.repos.d/kubernetes.repo
#  when: ansible_facts['os_family'] != "Debian"


