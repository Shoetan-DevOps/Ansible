---
# tasks file for wireguard-client

#<------- Upate apt packages --->
- name: Update Server
  become: yes
  ansible.builtin.apt:
    update_cache: yes
#<------- END Upate apt packages --->

#<------- INSTALL iptables, net-tools & Wireguard --->
- name: Install iptables, net-tools and Wireguard
  become: yes
  ansible.builtin.apt:
    name:
      - iptables
      - net-tools
      - wireguard
      - resolvconf
    state: present
#<------- END INSTALL --->

#<------- IP Forwarding --->
- name: Configure IP forwarding
  become: yes
  ansible.builtin.lineinfile:
    path: /etc/sysctl.d/wireguard.conf
    line: net.ipv4.ip_forward=1
    create: yes
  notify:
    - Reload sysctl config
#<------- END IP Forwarding --->

#<-------  unique index WG clients & check if already part of network --->
- name: Get wireguard unique host address
  set_fact:
    host_ip: "{{ ansible_default_ipv4.address }}"
    host_index: "{{ groups['wg-client'].index(inventory_hostname) + 2 }}"

- name: Show host_index
  ansible.builtin.debug:
    msg: "{{ wgc_cidr }}.{{ host_index }}"

- name: Does wg client exist already in server conf - index check
  become: yes
  ansible.builtin.shell: grep -q "10.7.7.{{ host_index }}" /etc/wireguard/wg0.conf
  delegate_to: "{{ wg_server_ip }}"
  register: client_exists
  ignore_errors: yes  # Ignore the error if file doesn't exist
  failed_when: client_exists.rc == 3  # Treat non-existent file as success (0 = found, 1 = not found, 2 = file not exists)

- name: Print Client exist
  ansible.builtin.debug:
    var: client_exists.rc

#<------- WG reset actions --->
- name: Stop wg0 if reset vpn and vpn exist
  become: yes
  ansible.builtin.shell: wg-quick down wg0
  ignore_errors: true
  when: reset_vpn | default(false)
  # when: (reset_vpn | default(false)) and client_exists.rc==0

- name: Remove all old clients if reset clients
  become: yes
  ansible.builtin.shell: cp /etc/wireguard/wg0-template /etc/wireguard/wg0.conf
  delegate_to: "{{ wg_server_ip }}"
  when: reset_vpn | default(false)

#<------- Generate WG keys --->
- name: Generate WG private & publick keys
  ansible.builtin.shell: >
    wg genkey | 
    tee wgclient.key | 
    wg pubkey > wgclient.pub
  notify: 
    - Move Keys to wireguard homedir
    - Get WireGuard client Public key
    - Get WireGuard client private key
    - Get WireGuard server Public key
    - Create wgs0.conf file
    - Read file contents
    - Print wg0.conf
    - Create peer for wg server
    - Concatenate peer to wgs0
    - Start wireguard client interface
    - Restart wireguard server interface
  when: (reset_vpn | default(false)) or (client_exists.rc != 0)




