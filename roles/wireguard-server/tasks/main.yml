---
# tasks file for wireguard-server

#<------- HOSTNAME  --->
- name: Set wireguard server hostname
  become: yes
  ansible.builtin.hostname:
    name: wgserver01
#<------- END HOSTNAME  --->

#<------- Upate apt packages --->
- name: Update Server
  become: yes
  ansible.builtin.apt:
    update_cache: yes
#<------- END Upate apt packages --->

#<------- INSTALL iptables, net-tools & Wireguard --->
- name: Install iptables, net-tools and Wireguard
  become: yes
  ansible.builtin.apt:
    name:
      - iptables
      - net-tools
      - wireguard
    state: present
#<------- END INSTALL --->

#<------- IP Forwarding --->
- name: Configure IP forwarding
  become: yes
  ansible.builtin.lineinfile:
    path: /etc/sysctl.d/wireguard.conf
    line: net.ipv4.ip_forward=1
    create: yes
  notify:
    - Reload sysctl config
#<------- END IP Forwarding --->

#<------- Bring wg down if reset --->
- name: Bring wg down if reset
  become: yes
  ansible.builtin.shell: wg-quick down wg0
  when: reset_vpn | default(false)
  ignore_errors: yes

#<------- Generate WG keys --->
- name: Generate WG private & publick keys
  ansible.builtin.shell: >
    wg genkey | 
    tee wgserver.key | 
    wg pubkey > wgserver.pub
  notify: 
    - Move Keys to wireguard homedir
    - Get WireGuard private key
    - Create wg0 template file
    - Create wg0.conf file
    - Read file contents
    - Print wg0.conf
    - Start wireguard interface
  when: reset_vpn | default(false)

- name: configure vpn 
  meta: flush_handlers

- name: Print wireguard interfage
  become: yes
  ansible.builtin.shell: wg
  register: wg_result

- name: Pingt wg result
  ansible.builtin.debug: 
    var: wg_result.stdout